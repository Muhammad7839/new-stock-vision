{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marie\\\\new-stock-vision\\\\stock-vision-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport SearchBar from './components/SearchBar';\nimport PredictionChart from './components/PredictionChart';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ticker, setTicker] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const handleSearch = selectedTicker => {\n    setTicker(selectedTicker);\n    fetch(`http://127.0.0.1:5000/predict?ticker=${selectedTicker}`).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      if (data && Array.isArray(data)) {\n        setForecast(data);\n      } else {\n        alert('No forecast data found for this ticker.');\n      }\n    }).catch(err => {\n      console.error('Error fetching prediction:', err);\n      alert('Error fetching data. Please check your backend or the browser console.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Stock Vision Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Vision\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"AI-Powered Stock Forecasting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), forecast && forecast.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PredictionChart, {\n        data: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicted price for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this), \" on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: forecast[0].date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 62\n        }, this), \": $\", forecast[0].yhat.toFixed(2), \" (range: $\", forecast[0].yhat_lower.toFixed(2), \" - $\", forecast[0].yhat_upper.toFixed(2), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"APVjhHslrjBx78kjLyC2Neg8HtI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","PredictionChart","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","ticker","setTicker","forecast","setForecast","handleSearch","selectedTicker","fetch","then","res","ok","Error","json","data","Array","isArray","alert","catch","err","console","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","length","date","yhat","toFixed","yhat_lower","yhat_upper","_c","$RefreshReg$"],"sources":["C:/Users/Marie/new-stock-vision/stock-vision-ui/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport SearchBar from './components/SearchBar';\nimport PredictionChart from './components/PredictionChart';\nimport logo from './logo.png';\n\nfunction App() {\n  const [ticker, setTicker] = useState('');\n  const [forecast, setForecast] = useState(null);\n\n  const handleSearch = (selectedTicker) => {\n    setTicker(selectedTicker);\n\n    fetch(`http://127.0.0.1:5000/predict?ticker=${selectedTicker}`)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return res.json();\n      })\n      .then((data) => {\n        if (data && Array.isArray(data)) {\n          setForecast(data);\n        } else {\n          alert('No forecast data found for this ticker.');\n        }\n      })\n      .catch((err) => {\n        console.error('Error fetching prediction:', err);\n        alert('Error fetching data. Please check your backend or the browser console.');\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <img src={logo} alt=\"Stock Vision Logo\" className=\"logo\" />\n      <h1>Stock Vision</h1>\n      <p>AI-Powered Stock Forecasting</p>\n\n      <SearchBar onSearch={handleSearch} />\n\n      {forecast && forecast.length > 0 && (\n        <>\n          <PredictionChart data={forecast} />\n          <p>\n            Predicted price for <strong>{ticker}</strong> on <strong>{forecast[0].date}</strong>: $\n            {forecast[0].yhat.toFixed(2)} (range: $\n            {forecast[0].yhat_lower.toFixed(2)} - $\n            {forecast[0].yhat_upper.toFixed(2)})\n          </p>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}